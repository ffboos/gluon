From: David Bauer <mail@david-bauer.net>
Date: Mon, 26 Feb 2024 22:11:07 +0100
Subject: fixup! dropbear: add a failsafe mode that will always allow password-less root login

diff --git a/package/network/services/dropbear/patches/700-failsafe-mode.patch b/package/network/services/dropbear/patches/700-failsafe-mode.patch
index bd9cf1ce4234d94bcc5b782cc753f59993f999bc..8762112de6bdb2cfb1fd3b92ddcf13a19c922a6c 100644
--- a/package/network/services/dropbear/patches/700-failsafe-mode.patch
+++ b/package/network/services/dropbear/patches/700-failsafe-mode.patch
@@ -1,6 +1,6 @@
 --- a/svr-auth.c
 +++ b/svr-auth.c
-@@ -125,10 +125,11 @@ void recv_msg_userauth_request() {
+@@ -124,10 +124,11 @@ void recv_msg_userauth_request() {
  				AUTH_METHOD_NONE_LEN) == 0) {
  		TRACE(("recv_msg_userauth_request: 'none' request"))
  		if (valid_user
@@ -18,36 +18,36 @@
  					"Auth succeeded with blank password for '%s' from %s",
 --- a/svr-runopts.c
 +++ b/svr-runopts.c
-@@ -77,6 +77,7 @@ static void printhelp(const char * progn
+@@ -82,6 +82,7 @@ static void printhelp(const char * progn
  					"-s		Disable password logins\n"
  					"-g		Disable password logins for root\n"
  					"-B		Allow blank password logins\n"
-+					"-f		Failsafe mode: always allow password-less root login\n"
++					"-f             Failsafe mode: always allow password-less root login\n"
+ 					"-t		Enable two-factor authentication (both password and public key required)\n"
  #endif
  					"-T		Maximum authentication tries (default %d)\n"
- #if DROPBEAR_SVR_LOCALTCPFWD
-@@ -144,6 +145,7 @@ void svr_getopts(int argc, char ** argv)
+@@ -166,6 +167,7 @@ void svr_getopts(int argc, char ** argv)
  	svr_opts.noauthpass = 0;
  	svr_opts.norootpass = 0;
  	svr_opts.allowblankpass = 0;
 +	svr_opts.failsafe_mode = 0;
+ 	svr_opts.multiauthmethod = 0;
  	svr_opts.maxauthtries = MAX_AUTH_TRIES;
  	svr_opts.inetdmode = 0;
- 	svr_opts.portcount = 0;
-@@ -266,6 +268,9 @@ void svr_getopts(int argc, char ** argv)
- 				case 'B':
- 					svr_opts.allowblankpass = 1;
+@@ -263,6 +265,9 @@ void svr_getopts(int argc, char ** argv)
+ 				case '2':
+ 					next = &reexec_fd_arg;
  					break;
 +				case 'f':
 +					svr_opts.failsafe_mode = 1;
 +					break;
  #endif
- 				case 'h':
- 					printhelp(argv[0]);
+ 				case 'p':
+ 					nextisport = 1;
 --- a/runopts.h
 +++ b/runopts.h
-@@ -106,6 +106,8 @@ typedef struct svr_runopts {
- 	int allowblankpass;
+@@ -110,6 +110,8 @@ typedef struct svr_runopts {
+ 	int multiauthmethod;
  	unsigned int maxauthtries;
  
 +	int failsafe_mode;
